<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on 신규하 블로그</title>
    <link>https://gyuha.com/tags/windows/</link>
    <description>Recent content in Windows on 신규하 블로그</description>
    <generator>Hugo</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 25 Jul 2025 23:17:05 +0900</lastBuildDate>
    <atom:link href="https://gyuha.com/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows에서 ESC 키를 누르면 자동으로 영어 입력 상태로 전환하는 방법</title>
      <link>https://gyuha.com/post/2025/2025-07-25-vim-esc/</link>
      <pubDate>Fri, 25 Jul 2025 23:17:05 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-07-25-vim-esc/</guid>
      <description>&lt;h2 id=&#34;문제-상황-개발자의-일상적인-고민&#34;&gt;문제 상황: 개발자의 일상적인 고민&lt;/h2&gt;&#xA;&lt;p&gt;PyCharm에서 IdeaVim을 사용하며 개발하다 보면 정말 자주 마주치는 상황이 있습니다. 한글로 주석을 쓰다가 ESC 키를 눌러 Normal 모드로 나온 후, 다시 명령어를 입력하려고 할 때 입력기가 여전히 한글 상태라 명령어가 제대로 작동하지 않는 것이죠.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCode에서 Neovim Extension 설정하기: macOS &amp; Windows 가이드</title>
      <link>https://gyuha.com/post/2025/2025-07-24-vscode-neovim-extension/</link>
      <pubDate>Thu, 24 Jul 2025 23:17:58 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-07-24-vscode-neovim-extension/</guid>
      <description>&lt;h2 id=&#34;vim에서-neovim으로-전향한-이유&#34;&gt;Vim에서 Neovim으로 전향한 이유&lt;/h2&gt;&#xA;&lt;p&gt;VSCode에서 Vim extension을 오랫동안 사용해왔습니다. Vim의 강력한 편집 기능을 VSCode에서도 사용할 수 있다는 점은 매우 매력적이었죠. 하지만 한 가지 치명적인 문제가 있었습니다. 바로 &lt;strong&gt;한글 입력 시 타이밍이 밀리는 현상&lt;/strong&gt;이었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우 git-bash에서 zsh 사용하기</title>
      <link>https://gyuha.com/post/2025/2025-04-13-windows-git-bash-use-zsh/</link>
      <pubDate>Sun, 13 Apr 2025 13:49:04 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-04-13-windows-git-bash-use-zsh/</guid>
      <description>&lt;p&gt;윈도우 환경에서 개발을 하다보면 터미널의 기능이 제한적이라는 것을 느끼게 됩니다. 이럴 때 git-bash와 zsh를 함께 사용하면 더 강력한 터미널 환경을 구축할 수 있습니다. 이 글에서는 윈도우 git-bash에서 zsh를 설치하고 설정하는 방법을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우용 패키지 매니저 Chocolatey 사용법</title>
      <link>https://gyuha.com/post/2020/2020-01-10-chocolatey_manual/</link>
      <pubDate>Fri, 10 Jan 2020 03:03:39 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-01-10-chocolatey_manual/</guid>
      <description>&lt;p&gt;Chocolatey는 윈도우용 패키지 매니저로, 설치하려는 윈도우용 소프트웨어를 일일이 웹사이트에서 찾아서 설치할 필요 없이 간단하게 커맨드 만으로 윈도우용 소프트웨어를 설치 할 수 있게 해 줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 10 subsystem Ubuntu에서 ssh 설치 하기</title>
      <link>https://gyuha.com/post/2018/2018-11-23-windows10-subsystem-openssh/</link>
      <pubDate>Fri, 23 Nov 2018 10:19:45 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-23-windows10-subsystem-openssh/</guid>
      <description>&lt;p&gt;먼저 기존에 설치된 openssh를 삭제하고 다시 설치해야 합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
