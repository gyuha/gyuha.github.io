<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Typescript on 신규하 블로그</title>
    <link>https://gyuha.com/tags/typescript/</link>
    <description>Recent content in Typescript on 신규하 블로그</description>
    <generator>Hugo</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 13 Jun 2025 21:00:01 +0900</lastBuildDate>
    <atom:link href="https://gyuha.com/tags/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Next.js에서 react-hook-form과 URL을 우아하게 동기화하는 법 🚀</title>
      <link>https://gyuha.com/post/2025/2025-06-13-react-hook-form-sync-with-url/</link>
      <pubDate>Fri, 13 Jun 2025 21:00:01 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-06-13-react-hook-form-sync-with-url/</guid>
      <description>&lt;p&gt;이번 포스트에서는 Next.js 프로젝트를 진행하면서 유용하게 사용할 수 있는 자작 커스텀 훅, &lt;code&gt;useFormUrlSync&lt;/code&gt;에 대해 이야기하고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Next.js에서 react-hook-form과 URL을 우아하게 동기화하는 법 2 🚀</title>
      <link>https://gyuha.com/post/2025/2025-07-16-react-hook-form-sync-with-url-2/</link>
      <pubDate>Fri, 13 Jun 2025 21:00:01 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-07-16-react-hook-form-sync-with-url-2/</guid>
      <description>&lt;h2 id=&#34;전체-소스-코드&#34;&gt;전체 소스 코드&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#111;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;use client&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; { AliasAny } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;@/types/alias.types&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { isNumber } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;es-toolkit/compat&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { useRouter, useSearchParams } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;next/navigation&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { useCallback, useEffect, useRef } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; DefaultValues, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; FieldValues, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormProps, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormReturn, useForm } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;react-hook-form&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * useFormUrlSync 훅의 옵션 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormUrlSyncOptions&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt; = Omit&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;UseFormProps&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;, &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;defaultValues&amp;#34;&lt;/span&gt;&amp;gt; &amp;amp; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 동기화에서 제외할 필드명들 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl?: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 변경 시 replace 사용 여부 (기본값: true) */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  replace?: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;boolean&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** 폼의 기본값들 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  defaultValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;DefaultValues&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 실시간 동기화 여부 (기본값: true) */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sync?: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;boolean&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * useFormUrlSync 훅의 반환 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormUrlSyncReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt; = UseFormReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; &amp;amp; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL을 수동으로 동기화하는 함수 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  syncToUrl: () =&amp;gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;void&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 파라미터 값을 적절한 타입으로 파싱합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param value - 파싱할 문자열 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 파싱된 값 (string | number | boolean)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; parseUrlValue(value: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;string&lt;/span&gt;): &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;string&lt;/span&gt; | &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;number&lt;/span&gt; | &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;boolean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; numValue = Number(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (isNumber(numValue) &amp;amp;&amp;amp; !Number.isNaN(numValue)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; numValue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 검색 파라미터에서 초기값을 추출합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param searchParams - URL 검색 파라미터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param excludeFromUrl - URL 동기화에서 제외할 필드명들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns URL에서 추출한 초기값들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; extractInitialValuesFromUrl&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  searchParams: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;URLSearchParams&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;): Partial&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; urlValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;Partial&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; = {};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; [key, value] &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;of&lt;/span&gt; searchParams.entries()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (!excludeFromUrl.includes(key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (urlValues &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; AliasAny)[key] = parseUrlValue(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; urlValues;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 폼 값들로부터 URL 파라미터를 생성합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param values - 폼 값들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param currentParams - 현재 URL 파라미터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param excludeFromUrl - URL 동기화에서 제외할 필드명들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 새로운 URLSearchParams 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; createUrlParamsFromValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  values: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;T&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  currentParams: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;URLSearchParams&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;): URLSearchParams {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; params = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;new&lt;/span&gt; URLSearchParams(currentParams);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; [key, value] &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;of&lt;/span&gt; Object.entries(values)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (excludeFromUrl.includes(key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;continue&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value !== &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; value !== &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value !== &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      params.&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;set&lt;/span&gt;(key, String(value));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      params.&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;delete&lt;/span&gt;(key);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; params;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 두 객체의 깊은 비교를 수행합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param obj1 - 비교할 첫 번째 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param obj2 - 비교할 두 번째 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 객체들이 동일한지 여부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; deepEqual(obj1: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;AliasAny&lt;/span&gt;, obj2: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;AliasAny&lt;/span&gt;): &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;boolean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; JSON.stringify(obj1) === JSON.stringify(obj2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * React Hook Form과 URL 검색 파라미터를 양방향으로 동기화하는 커스텀 훅입니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입, FieldValues를 확장해야 함&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param options - 훅 설정 옵션&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns React Hook Form의 UseFormReturn 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @remarks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 파라미터는 자동으로 적절한 타입(string, number, boolean)으로 파싱됩니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 빈 문자열, null, undefined 값은 URL에서 제거됩니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * Next.js의 useRouter와 useSearchParams를 사용하므로 Next.js 환경에서만 동작합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; useFormUrlSync&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(options: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;UseFormUrlSyncOptions&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;): UseFormUrlSyncReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; router = useRouter();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; searchParams = useSearchParams();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; { excludeFromUrl = [], replace = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;, defaultValues, sync = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;, ...formOptions } = options;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; isUpdatingFromUrl = useRef(&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; getUrlValues = useCallback(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; extractInitialValuesFromUrl&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;(searchParams, excludeFromUrl &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [searchParams, excludeFromUrl]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; initialValues = {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...defaultValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...getUrlValues(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; DefaultValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; form = useForm({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...formOptions,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    defaultValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;initialValues&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; { watch, reset, getValues } = form;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; updateUrl = useCallback(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (values: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;T&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; params = createUrlParamsFromValues(values, searchParams, excludeFromUrl &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; newSearchString = params.toString();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; currentSearchString = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;new&lt;/span&gt; URLSearchParams(window.location.search).toString();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (newSearchString !== currentSearchString) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; newUrl = &lt;span style=&#34;color:#0086d2&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;${&lt;/span&gt;window.location.pathname&lt;span style=&#34;color:#0086d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;?&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;${&lt;/span&gt;newSearchString&lt;span style=&#34;color:#0086d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;`&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (replace) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          router.replace(newUrl, { scroll: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;false&lt;/span&gt; });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          router.push(newUrl, { scroll: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;false&lt;/span&gt; });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [router, searchParams, excludeFromUrl, replace],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; syncToUrl = useCallback(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; values = getValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    updateUrl(values);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [getValues, updateUrl]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  useEffect(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (sync) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; subscription = watch(values =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (isUpdatingFromUrl.current) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        updateUrl(values &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; T);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; () =&amp;gt; subscription.unsubscribe();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [watch, updateUrl, sync]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  useEffect(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; urlValues = getUrlValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; currentFormValues = getValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; relevantFormValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;Partial&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; = {};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;in&lt;/span&gt; urlValues) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (Object.prototype.hasOwnProperty.call(urlValues, key)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        relevantFormValues[key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T] = currentFormValues[key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (!deepEqual(urlValues, relevantFormValues)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      isUpdatingFromUrl.current = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      reset({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...currentFormValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...urlValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; DefaultValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      setTimeout(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        isUpdatingFromUrl.current = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }, &lt;span style=&#34;color:#0086f7;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [getUrlValues, reset, getValues]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...form,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    syncToUrl: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;syncToUrl&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;웹 애플리케이션에서 필터나 검색 기능을 구현할 때, 사용자가 설정한 상태를 URL에 반영하고 싶은 경우가 많습니다. 예를 들어, 사용자가 상품 목록에서 카테고리를 선택하고 가격 범위를 설정했을 때, 이 정보가 URL에 반영되어 페이지를 새로고침하거나 다른 사람과 공유해도 동일한 필터 상태를 유지할 수 있어야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SVG 아이콘의 인덱스 파일을 생성하는 Vite 플러그인</title>
      <link>https://gyuha.com/post/2025/2025-02-28_vite-plugin-svgr-indexer/</link>
      <pubDate>Fri, 28 Feb 2025 09:15:19 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-02-28_vite-plugin-svgr-indexer/</guid>
      <description>&lt;p&gt;SVG 아이콘 폴더를 모니터링하고 자동으로 index.ts 파일을 생성하는 Vite 플러그인입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TypeScript Interface와 Type</title>
      <link>https://gyuha.com/post/2024/2024-12-27_advanced-typescript/</link>
      <pubDate>Fri, 27 Dec 2024 22:00:06 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-27_advanced-typescript/</guid>
      <description>&lt;p&gt;TypeScript는 현대 웹 개발에서 필수로 자리 잡고 있는 정적 타이핑 언어입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typescript를 사용한 Express 프로젝트 설정하기(with Eslint)</title>
      <link>https://gyuha.com/post/2020/2020-06-10-express-typescript-eslint/</link>
      <pubDate>Wed, 10 Jun 2020 23:36:41 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-06-10-express-typescript-eslint/</guid>
      <description>&lt;p&gt;vscode에서 typescript를 사용한 express 프로젝트를 시작 하면서 설정하는 기본적인 작업을 정리해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vscode에서 vue 프로젝트 생성시 ESlint와 Prettier 설정해 주기</title>
      <link>https://gyuha.com/post/2020/2020-04-19-vue-typescript-eslint/</link>
      <pubDate>Sun, 19 Apr 2020 03:50:46 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-04-19-vue-typescript-eslint/</guid>
      <description>&lt;h2 id=&#34;vue-프로젝트-생성하기&#34;&gt;Vue 프로젝트 생성하기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gyuha.com/img/2020-04-19-vue-typescript-eslint/vscode-vue.jpg&#34; alt=&#34;vscode-vue&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;기존에 사용하던 &lt;a href=&#34;https://www.npmjs.com/package/tslint&#34;&gt;TSLint가 더이상 지원&lt;/a&gt;을 받지 못 하게 되면서, ESlint로 넘어가야 상태가 되었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typescript에서 default import 개선..</title>
      <link>https://gyuha.com/post/2019/2019-12-19-typescript-default-import/</link>
      <pubDate>Thu, 19 Dec 2019 21:32:11 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-12-19-typescript-default-import/</guid>
      <description>&lt;p&gt;express를 import하면 아래와 같이 import 했을 겁니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express Typescript Webpack</title>
      <link>https://gyuha.com/post/2018/2018-11-13-express-typescript-webpack/</link>
      <pubDate>Tue, 13 Nov 2018 23:11:37 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-13-express-typescript-webpack/</guid>
      <description>&lt;p&gt;express를 타입스크립트롤 시작하는 방법을 설명합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typescript Webpack Serverless 구성하기</title>
      <link>https://gyuha.com/post/2018/2018-11-06-typescript-webpack-serverless/</link>
      <pubDate>Tue, 06 Nov 2018 18:29:07 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-06-typescript-webpack-serverless/</guid>
      <description>&lt;p&gt;serverless에서 webpack을 이용해서 typescript를 구성해 보면서 작업 하던걸 기록 해 둡니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
