<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 신규하 블로그</title>
    <link>https://gyuha.com/post/</link>
    <description>Recent content in Posts on 신규하 블로그</description>
    <generator>Hugo</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 13 Jun 2025 21:00:01 +0900</lastBuildDate>
    <atom:link href="https://gyuha.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Next.js에서 react-hook-form과 URL을 우아하게 동기화하는 법 🚀</title>
      <link>https://gyuha.com/post/2025/2025-06-13-react-hook-form-sync-with-url/</link>
      <pubDate>Fri, 13 Jun 2025 21:00:01 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-06-13-react-hook-form-sync-with-url/</guid>
      <description>&lt;p&gt;이번 포스트에서는 Next.js 프로젝트를 진행하면서 유용하게 사용할 수 있는 자작 커스텀 훅, &lt;code&gt;useFormUrlSync&lt;/code&gt;에 대해 이야기하고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Next.js에서 react-hook-form과 URL을 우아하게 동기화하는 법 2 🚀</title>
      <link>https://gyuha.com/post/2025/2025-07-16-react-hook-form-sync-with-url-2/</link>
      <pubDate>Fri, 13 Jun 2025 21:00:01 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-07-16-react-hook-form-sync-with-url-2/</guid>
      <description>&lt;h2 id=&#34;전체-소스-코드&#34;&gt;전체 소스 코드&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#111;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;use client&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; { AliasAny } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;@/types/alias.types&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { isNumber } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;es-toolkit/compat&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { useRouter, useSearchParams } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;next/navigation&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { useCallback, useEffect, useRef } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; DefaultValues, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; FieldValues, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormProps, &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormReturn, useForm } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;react-hook-form&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * useFormUrlSync 훅의 옵션 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormUrlSyncOptions&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt; = Omit&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;UseFormProps&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;, &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;defaultValues&amp;#34;&lt;/span&gt;&amp;gt; &amp;amp; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 동기화에서 제외할 필드명들 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl?: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 변경 시 replace 사용 여부 (기본값: true) */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  replace?: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;boolean&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** 폼의 기본값들 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  defaultValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;DefaultValues&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL 실시간 동기화 여부 (기본값: true) */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sync?: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;boolean&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * useFormUrlSync 훅의 반환 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;type&lt;/span&gt; UseFormUrlSyncReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt; = UseFormReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; &amp;amp; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/** URL을 수동으로 동기화하는 함수 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  syncToUrl: () =&amp;gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;void&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 파라미터 값을 적절한 타입으로 파싱합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param value - 파싱할 문자열 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 파싱된 값 (string | number | boolean)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; parseUrlValue(value: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;string&lt;/span&gt;): &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;string&lt;/span&gt; | &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;number&lt;/span&gt; | &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;boolean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value === &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; numValue = Number(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (isNumber(numValue) &amp;amp;&amp;amp; !Number.isNaN(numValue)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; numValue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 검색 파라미터에서 초기값을 추출합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param searchParams - URL 검색 파라미터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param excludeFromUrl - URL 동기화에서 제외할 필드명들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns URL에서 추출한 초기값들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; extractInitialValuesFromUrl&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  searchParams: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;URLSearchParams&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;): Partial&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; urlValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;Partial&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; = {};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; [key, value] &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;of&lt;/span&gt; searchParams.entries()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (!excludeFromUrl.includes(key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (urlValues &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; AliasAny)[key] = parseUrlValue(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; urlValues;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 폼 값들로부터 URL 파라미터를 생성합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param values - 폼 값들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param currentParams - 현재 URL 파라미터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param excludeFromUrl - URL 동기화에서 제외할 필드명들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 새로운 URLSearchParams 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; createUrlParamsFromValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  values: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;T&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  currentParams: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;URLSearchParams&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  excludeFromUrl: (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;): URLSearchParams {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; params = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;new&lt;/span&gt; URLSearchParams(currentParams);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; [key, value] &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;of&lt;/span&gt; Object.entries(values)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (excludeFromUrl.includes(key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;continue&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (value !== &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; value !== &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value !== &lt;span style=&#34;color:#0086d2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      params.&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;set&lt;/span&gt;(key, String(value));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      params.&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;delete&lt;/span&gt;(key);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; params;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 두 객체의 깊은 비교를 수행합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param obj1 - 비교할 첫 번째 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param obj2 - 비교할 두 번째 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns 객체들이 동일한지 여부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; deepEqual(obj1: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;AliasAny&lt;/span&gt;, obj2: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;AliasAny&lt;/span&gt;): &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;boolean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; JSON.stringify(obj1) === JSON.stringify(obj2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * React Hook Form과 URL 검색 파라미터를 양방향으로 동기화하는 커스텀 훅입니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @template T - 폼 필드 값들의 타입, FieldValues를 확장해야 함&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @param options - 훅 설정 옵션&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @returns React Hook Form의 UseFormReturn 객체&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * @remarks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * URL 파라미터는 자동으로 적절한 타입(string, number, boolean)으로 파싱됩니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * 빈 문자열, null, undefined 값은 URL에서 제거됩니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; * Next.js의 useRouter와 useSearchParams를 사용하므로 Next.js 환경에서만 동작합니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;background-color:#0f140f;font-style:italic&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;function&lt;/span&gt; useFormUrlSync&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#ff0086;font-weight:bold&#34;&gt;FieldValues&lt;/span&gt;&amp;gt;(options: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;UseFormUrlSyncOptions&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;): UseFormUrlSyncReturn&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; router = useRouter();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; searchParams = useSearchParams();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; { excludeFromUrl = [], replace = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;, defaultValues, sync = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;, ...formOptions } = options;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; isUpdatingFromUrl = useRef(&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; getUrlValues = useCallback(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; extractInitialValuesFromUrl&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;(searchParams, excludeFromUrl &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [searchParams, excludeFromUrl]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; initialValues = {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...defaultValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...getUrlValues(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; DefaultValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; form = useForm({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...formOptions,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    defaultValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;initialValues&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; { watch, reset, getValues } = form;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; updateUrl = useCallback(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (values: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;T&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; params = createUrlParamsFromValues(values, searchParams, excludeFromUrl &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T)[]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; newSearchString = params.toString();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; currentSearchString = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;new&lt;/span&gt; URLSearchParams(window.location.search).toString();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (newSearchString !== currentSearchString) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; newUrl = &lt;span style=&#34;color:#0086d2&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;${&lt;/span&gt;window.location.pathname&lt;span style=&#34;color:#0086d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;?&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;${&lt;/span&gt;newSearchString&lt;span style=&#34;color:#0086d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0086d2&#34;&gt;`&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (replace) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          router.replace(newUrl, { scroll: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;false&lt;/span&gt; });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          router.push(newUrl, { scroll: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;false&lt;/span&gt; });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [router, searchParams, excludeFromUrl, replace],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; syncToUrl = useCallback(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; values = getValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    updateUrl(values);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [getValues, updateUrl]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  useEffect(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (sync) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; subscription = watch(values =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (isUpdatingFromUrl.current) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        updateUrl(values &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; T);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; () =&amp;gt; subscription.unsubscribe();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [watch, updateUrl, sync]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  useEffect(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; urlValues = getUrlValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; currentFormValues = getValues();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; relevantFormValues: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;Partial&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt; = {};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;const&lt;/span&gt; key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;in&lt;/span&gt; urlValues) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (Object.prototype.hasOwnProperty.call(urlValues, key)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        relevantFormValues[key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T] = currentFormValues[key &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;keyof&lt;/span&gt; T];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;if&lt;/span&gt; (!deepEqual(urlValues, relevantFormValues)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      isUpdatingFromUrl.current = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      reset({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...currentFormValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...urlValues,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      } &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;as&lt;/span&gt; DefaultValues&amp;lt;&lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;T&lt;/span&gt;&amp;gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      setTimeout(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        isUpdatingFromUrl.current = &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }, &lt;span style=&#34;color:#0086f7;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [getUrlValues, reset, getValues]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#fb660a;font-weight:bold&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...form,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    syncToUrl: &lt;span style=&#34;color:#cdcaa9;font-weight:bold&#34;&gt;syncToUrl&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;웹 애플리케이션에서 필터나 검색 기능을 구현할 때, 사용자가 설정한 상태를 URL에 반영하고 싶은 경우가 많습니다. 예를 들어, 사용자가 상품 목록에서 카테고리를 선택하고 가격 범위를 설정했을 때, 이 정보가 URL에 반영되어 페이지를 새로고침하거나 다른 사람과 공유해도 동일한 필터 상태를 유지할 수 있어야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>옵시디언에서 편집창 폭 넓히기</title>
      <link>https://gyuha.com/post/2025/2025-05-06-obsidian-editor-width/</link>
      <pubDate>Tue, 06 May 2025 21:35:29 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-05-06-obsidian-editor-width/</guid>
      <description>&lt;p&gt;Obsidian을 쓰다 보면, 쫍은 편집창의 폭 때문에 불편 할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python의 uv 패키지 매니저</title>
      <link>https://gyuha.com/post/2025/2025-04-14-python-uv-package-manager/</link>
      <pubDate>Mon, 14 Apr 2025 21:35:29 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-04-14-python-uv-package-manager/</guid>
      <description>&lt;p&gt;UV는 현대적이고 고성능 파이썬 패키지 관리자이며 Rust로 작성된 설치 프로그램입니다. &lt;code&gt;PIP&lt;/code&gt;과 같은 전통적인 Python 패키지 관리 도구의 드롭 인 교체 역할을하며 속도, 신뢰성 및 종속성 해상도가 크게 향상됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우 git-bash에서 zsh 사용하기</title>
      <link>https://gyuha.com/post/2025/2025-04-13-windows-git-bash-use-zsh/</link>
      <pubDate>Sun, 13 Apr 2025 13:49:04 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-04-13-windows-git-bash-use-zsh/</guid>
      <description>&lt;p&gt;윈도우 환경에서 개발을 하다보면 터미널의 기능이 제한적이라는 것을 느끼게 됩니다. 이럴 때 git-bash와 zsh를 함께 사용하면 더 강력한 터미널 환경을 구축할 수 있습니다. 이 글에서는 윈도우 git-bash에서 zsh를 설치하고 설정하는 방법을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SVG 아이콘의 인덱스 파일을 생성하는 Vite 플러그인</title>
      <link>https://gyuha.com/post/2025/2025-02-28_vite-plugin-svgr-indexer/</link>
      <pubDate>Fri, 28 Feb 2025 09:15:19 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-02-28_vite-plugin-svgr-indexer/</guid>
      <description>&lt;p&gt;SVG 아이콘 폴더를 모니터링하고 자동으로 index.ts 파일을 생성하는 Vite 플러그인입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL Replication과 Connection Pooling 구현하기</title>
      <link>https://gyuha.com/post/2025/2025-01-17_postgresql-replication/</link>
      <pubDate>Fri, 17 Jan 2025 19:41:48 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-01-17_postgresql-replication/</guid>
      <description>&lt;p&gt;이번 글에서는 Docker Compose를 사용하여 PostgreSQL Replication 환경을 구축하고, PgCat을 통한 Connection Pooling을 구현하는 방법을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speculation Rules 사이트 로딩 속도 개선하기</title>
      <link>https://gyuha.com/post/2025/2025-01-08_script-type-speculationrules/</link>
      <pubDate>Wed, 08 Jan 2025 11:13:22 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-01-08_script-type-speculationrules/</guid>
      <description>&lt;p&gt;웹 성능은 사용자 경험(UX)을 결정짓는 핵심 요소 중 하나입니다. 사용자가 페이지에서 다른 페이지로 이동할 때 추가적인 로딩 지연 없이 빠르게 전환할 수 있다면, 더 높은 만족도가 보장됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 이미지 최적화: 더 빠른 배포를 위한 크기 줄이기</title>
      <link>https://gyuha.com/post/2024/2024-12-27_docker-image-optimization/</link>
      <pubDate>Fri, 27 Dec 2024 22:00:06 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-27_docker-image-optimization/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://gyuha.com/img/2024/docker/docker-opti.png&#34; alt=&#34;Docker image optimization&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Docker의 이미지에는 사용자가 생각하는 것보다 더 많은 내용이 포함되는 경우가 많습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TypeScript Interface와 Type</title>
      <link>https://gyuha.com/post/2024/2024-12-27_advanced-typescript/</link>
      <pubDate>Fri, 27 Dec 2024 22:00:06 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-27_advanced-typescript/</guid>
      <description>&lt;p&gt;TypeScript는 현대 웹 개발에서 필수로 자리 잡고 있는 정적 타이핑 언어입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>유용한 Aspect-Oriented Programming(AOP) 모음</title>
      <link>https://gyuha.com/post/2024/2024-12-20_usefull_aop/</link>
      <pubDate>Fri, 20 Dec 2024 13:15:31 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-20_usefull_aop/</guid>
      <description>&lt;p&gt;Aspect-Oriented Programming(AOP)은 Spring에서 횡단 관심사를 처리하기 위한 강력한 도구입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot에서 자주 사용되는 애노테이션</title>
      <link>https://gyuha.com/post/2024/2024-12-18_list_of_useful_annotation_in_spring_boot/</link>
      <pubDate>Wed, 18 Dec 2024 10:04:00 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-18_list_of_useful_annotation_in_spring_boot/</guid>
      <description>&lt;p&gt;이 문서는 Spring Boot 애플리케이션에서 자주 사용되는 애노테이션의 목록입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Volta로 Node.js 및 JavaScript 도구 효율적으로 관리하기</title>
      <link>https://gyuha.com/post/2024/2024-12-02_volta/</link>
      <pubDate>Mon, 02 Dec 2024 07:55:14 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-12-02_volta/</guid>
      <description>&lt;p&gt;개발 환경을 설정하고 관리하다 보면 다양한 버전의 Node.js와 패키지 매니저를 사용해야 할 때가 많습니다. 이때 도구 관리자 &lt;strong&gt;Volta&lt;/strong&gt;를 사용하면 효율적이고 간편하게 Node.js 및 JavaScript 도구를 관리할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Seaborn을 활용한 데이터 시각화의 편리함</title>
      <link>https://gyuha.com/post/2024/2024-11-26_seaborn/</link>
      <pubDate>Tue, 26 Nov 2024 09:51:07 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-11-26_seaborn/</guid>
      <description>&lt;p&gt;데이터 시각화는 데이터 분석에서 중요한 단계입니다. Python의 Seaborn 라이브러리는 통계적 데이터 시각화를 쉽게 할 수 있도록 도와주는 강력한 도구입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pandas의 DataFrame에서 자주 사용되는 유용한 메서드들 소개</title>
      <link>https://gyuha.com/post/2024/2024-11-26_pandas-dataframe/</link>
      <pubDate>Tue, 26 Nov 2024 08:18:54 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-11-26_pandas-dataframe/</guid>
      <description>&lt;p&gt;Pandas는 데이터 분석 및 조작을 위한 강력한 라이브러리로, 특히 DataFrame 객체는 표 형식의 데이터를 다루는 데 매우 유용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins Docker Compose 설정 가이드</title>
      <link>https://gyuha.com/post/2024/2024-10-21_jenkins-docker-compose/</link>
      <pubDate>Mon, 21 Oct 2024 20:13:39 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-10-21_jenkins-docker-compose/</guid>
      <description>&lt;p&gt;Jenkins는 소프트웨어 개발에서 지속적 통합 및 배포(CI/CD)를 위한 강력한 도구입니다. Docker Compose를 사용하여 Jenkins를 설정하면 환경 구성이 간편해지고 일관성 있는 배포가 가능해집니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCode에서 Ruff로 Python 코드 품질 관리하기</title>
      <link>https://gyuha.com/post/2024/2024-10-01-python-ruff-settings-in-vscode/</link>
      <pubDate>Tue, 01 Oct 2024 01:10:56 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-10-01-python-ruff-settings-in-vscode/</guid>
      <description>&lt;p&gt;Python 개발자라면 코드 품질 관리의 중요성을 잘 알고 계실 겁니다. 오늘은 VSCode에서 Ruff를 사용하여 Python 코드의 품질을 효과적으로 관리하는 방법을 소개해 드리겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FastAPI에서 .env 파일 사용하기</title>
      <link>https://gyuha.com/post/2024/2024-09-30-using-.env-in-fastapi/</link>
      <pubDate>Mon, 30 Sep 2024 08:20:28 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-09-30-using-.env-in-fastapi/</guid>
      <description>&lt;p&gt;환경별로 여러 개의 &lt;code&gt;.env&lt;/code&gt; 파일을 사용하여 설정을 관리하는 방법.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx에서 다중 도메인 CORS 설정하기</title>
      <link>https://gyuha.com/post/2024/2024-09-27-setting-up-multi-domain-cors-in-nginx/</link>
      <pubDate>Fri, 27 Sep 2024 08:18:16 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-09-27-setting-up-multi-domain-cors-in-nginx/</guid>
      <description>&lt;p&gt;Nginx 서버에서 여러 도메인에 대해 CORS(Cross-Origin Resource Sharing)를 설정하는 방법에 대해 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>유용한 한 줄 자바스크립트</title>
      <link>https://gyuha.com/post/2022/2022-02-26-one-liners-in-javascript/</link>
      <pubDate>Sat, 26 Feb 2022 10:17:42 +0900</pubDate>
      <guid>https://gyuha.com/post/2022/2022-02-26-one-liners-in-javascript/</guid>
      <description>&lt;p&gt;자바스크립에서 요긴하게 쓸 수 있는 한 줄 짜리 코드 들을 공유 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typescript를 사용한 Express 프로젝트 설정하기(with Eslint)</title>
      <link>https://gyuha.com/post/2020/2020-06-10-express-typescript-eslint/</link>
      <pubDate>Wed, 10 Jun 2020 23:36:41 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-06-10-express-typescript-eslint/</guid>
      <description>&lt;p&gt;vscode에서 typescript를 사용한 express 프로젝트를 시작 하면서 설정하는 기본적인 작업을 정리해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>안드로이드 APK 리소스 편집하기</title>
      <link>https://gyuha.com/post/2020/2020-05-20-apk-editor-studio/</link>
      <pubDate>Wed, 20 May 2020 22:39:10 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-05-20-apk-editor-studio/</guid>
      <description>&lt;p&gt;APK 파일의 리소스를 편집해야 할 일이 있어서 찾아 보다가, 참 편한 프로그램이 있어서 기록을 남겨 둡니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>워드프레스 보안 설정</title>
      <link>https://gyuha.com/post/2020/2020-05-19-wordpress_security/</link>
      <pubDate>Tue, 19 May 2020 10:37:23 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-05-19-wordpress_security/</guid>
      <description>&lt;p&gt;워드프레스로 만든 홈페이지 보안 적용 정리..&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vscode에서 vue 프로젝트 생성시 ESlint와 Prettier 설정해 주기</title>
      <link>https://gyuha.com/post/2020/2020-04-19-vue-typescript-eslint/</link>
      <pubDate>Sun, 19 Apr 2020 03:50:46 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-04-19-vue-typescript-eslint/</guid>
      <description>&lt;h2 id=&#34;vue-프로젝트-생성하기&#34;&gt;Vue 프로젝트 생성하기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gyuha.com/img/2020-04-19-vue-typescript-eslint/vscode-vue.jpg&#34; alt=&#34;vscode-vue&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;기존에 사용하던 &lt;a href=&#34;https://www.npmjs.com/package/tslint&#34;&gt;TSLint가 더이상 지원&lt;/a&gt;을 받지 못 하게 되면서, ESlint로 넘어가야 상태가 되었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>자바스크립트 배열 메서드 정리</title>
      <link>https://gyuha.com/post/2020/2020-03-15-javascript-arrary/</link>
      <pubDate>Sun, 15 Mar 2020 21:39:55 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-03-15-javascript-arrary/</guid>
      <description>&lt;p&gt;자바스크립트의 배열을 메서드를 정리해 봅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우용 패키지 매니저 Chocolatey 사용법</title>
      <link>https://gyuha.com/post/2020/2020-01-10-chocolatey_manual/</link>
      <pubDate>Fri, 10 Jan 2020 03:03:39 +0900</pubDate>
      <guid>https://gyuha.com/post/2020/2020-01-10-chocolatey_manual/</guid>
      <description>&lt;p&gt;Chocolatey는 윈도우용 패키지 매니저로, 설치하려는 윈도우용 소프트웨어를 일일이 웹사이트에서 찾아서 설치할 필요 없이 간단하게 커맨드 만으로 윈도우용 소프트웨어를 설치 할 수 있게 해 줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typescript에서 default import 개선..</title>
      <link>https://gyuha.com/post/2019/2019-12-19-typescript-default-import/</link>
      <pubDate>Thu, 19 Dec 2019 21:32:11 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-12-19-typescript-default-import/</guid>
      <description>&lt;p&gt;express를 import하면 아래와 같이 import 했을 겁니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCode에 live2d 사용하기</title>
      <link>https://gyuha.com/post/2019/2019-01-22-vscode-live2d/</link>
      <pubDate>Tue, 22 Jan 2019 23:42:22 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-01-22-vscode-live2d/</guid>
      <description>&lt;p&gt;먼저 띄운 화면을 보고 가시죠~&lt;/p&gt;</description>
    </item>
    <item>
      <title>우분투 18.04에서 kimchi 설치 하기</title>
      <link>https://gyuha.com/post/2019/2019-01-04-ubuntu-1804-kimchi-install/</link>
      <pubDate>Fri, 04 Jan 2019 17:04:32 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-01-04-ubuntu-1804-kimchi-install/</guid>
      <description>&lt;h2 id=&#34;bridge-network-설치하기&#34;&gt;Bridge Network 설치하기&lt;/h2&gt;&#xA;&lt;p&gt;전 kvm을 개발로 쓰면서 bridge network 형태로 자주 사용해서 먼저 bridge network를 설정 해 줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu 18.04에서 netplan을 사용한 static ip 설정</title>
      <link>https://gyuha.com/post/2019/2019-01-04-ubuntu-1804-static-ip/</link>
      <pubDate>Fri, 04 Jan 2019 10:30:30 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-01-04-ubuntu-1804-static-ip/</guid>
      <description>&lt;p&gt;17.10부터 네트워크 인터페이스 설정이 &lt;code&gt;netplan&lt;/code&gt;이라는 새로운 네트워크 설정이 생겼다. 기존에 인터페이스 설정(/etc/network/interfaces)보다는 간결해 보입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>우분투 노트북 서버 사용시 커버를 덮어도 잠들지 않도록 하기</title>
      <link>https://gyuha.com/post/2019/2019-01-04-ubuntu-server-labtop-cover/</link>
      <pubDate>Fri, 04 Jan 2019 10:23:04 +0900</pubDate>
      <guid>https://gyuha.com/post/2019/2019-01-04-ubuntu-server-labtop-cover/</guid>
      <description>&lt;p&gt;먼저 터미널에서 아래와 같은 파일을 열어 줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 10 subsystem Ubuntu에서 ssh 설치 하기</title>
      <link>https://gyuha.com/post/2018/2018-11-23-windows10-subsystem-openssh/</link>
      <pubDate>Fri, 23 Nov 2018 10:19:45 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-23-windows10-subsystem-openssh/</guid>
      <description>&lt;p&gt;먼저 기존에 설치된 openssh를 삭제하고 다시 설치해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express Typescript Webpack</title>
      <link>https://gyuha.com/post/2018/2018-11-13-express-typescript-webpack/</link>
      <pubDate>Tue, 13 Nov 2018 23:11:37 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-13-express-typescript-webpack/</guid>
      <description>&lt;p&gt;express를 타입스크립트롤 시작하는 방법을 설명합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo를 사용한 Github 블로그..</title>
      <link>https://gyuha.com/post/2018/2018-11-07-hugo-github/</link>
      <pubDate>Wed, 07 Nov 2018 00:20:56 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-07-hugo-github/</guid>
      <description>&lt;h2 id=&#34;hugo-설치-하기&#34;&gt;hugo 설치 하기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;를 보고 하면 됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Typescript Webpack Serverless 구성하기</title>
      <link>https://gyuha.com/post/2018/2018-11-06-typescript-webpack-serverless/</link>
      <pubDate>Tue, 06 Nov 2018 18:29:07 +0900</pubDate>
      <guid>https://gyuha.com/post/2018/2018-11-06-typescript-webpack-serverless/</guid>
      <description>&lt;p&gt;serverless에서 webpack을 이용해서 typescript를 구성해 보면서 작업 하던걸 기록 해 둡니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
