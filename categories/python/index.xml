<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 신규하 블로그</title>
    <link>https://gyuha.com/categories/python/</link>
    <description>Recent content in Python on 신규하 블로그</description>
    <generator>Hugo</generator>
    <language>ko-KR</language>
    <lastBuildDate>Mon, 14 Apr 2025 21:35:29 +0900</lastBuildDate>
    <atom:link href="https://gyuha.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python의 uv 패키지 매니저</title>
      <link>https://gyuha.com/post/2025/2025-04-14-python-uv-package-manager/</link>
      <pubDate>Mon, 14 Apr 2025 21:35:29 +0900</pubDate>
      <guid>https://gyuha.com/post/2025/2025-04-14-python-uv-package-manager/</guid>
      <description>&lt;h2 id=&#34;1-uv의-등장-배경-왜-새로운-도구가-필요했나&#34;&gt;1. uv의 등장 배경: 왜 새로운 도구가 필요했나?&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-기존-도구들의-한계&#34;&gt;1.1. 기존 도구들의 한계&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;pip의 속도 문제&lt;/strong&gt;: 대규모 패키지 설치 시 10분 이상 소요되는 경우 빈번(uv는 동일 작업을 10초 내 완료)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;환경 관리의 복잡성&lt;/strong&gt;: venv + pip + pip-tools + virtualenvwrapper 조합 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;의존성 해결 충돌&lt;/strong&gt;: 복잡한 의존성 그래프에서 종종 ResolutionError 발생&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;멀티플랫폼 지원 부족&lt;/strong&gt;: Windows 환경에서의 성능 저하 문제&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-astral팀의-접근-방식&#34;&gt;1.2. Astral팀의 접근 방식&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rust 기반 구현&lt;/strong&gt;: 메모리 안정성과 네이티브 성능 확보&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;병렬 처리 최적화&lt;/strong&gt;: 의존성 해결과 패키지 다운로드를 동시 진행&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;유니버설 바이너리&lt;/strong&gt;: 별도 Python 설치 없이 독립 실행 가능&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-성능-벤치마크-django-프로젝트-기준&#34;&gt;1.3. 성능 벤치마크 (Django 프로젝트 기준)&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;작업&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;pip&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;poetry&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;uv&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;초기 설치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;142s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;98s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;12s&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;재설치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;89s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;64s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;0.8s&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;잠금파일 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;32s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;28s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;3s&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-설치-방법&#34;&gt;2. 설치 방법&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;uv&lt;/code&gt;는 다양한 방법으로 설치할 수 있습니다. 아래는 OS별 설치 방법과 pip를 사용하는 방법입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCode에서 Ruff로 Python 코드 품질 관리하기</title>
      <link>https://gyuha.com/post/2024/2024-10-01-python-ruff-settings-in-vscode/</link>
      <pubDate>Tue, 01 Oct 2024 01:10:56 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-10-01-python-ruff-settings-in-vscode/</guid>
      <description>&lt;p&gt;Python 개발자라면 코드 품질 관리의 중요성을 잘 알고 계실 겁니다. 오늘은 VSCode에서 Ruff를 사용하여 Python 코드의 품질을 효과적으로 관리하는 방법을 소개해 드리겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FastAPI에서 .env 파일 사용하기</title>
      <link>https://gyuha.com/post/2024/2024-09-30-using-.env-in-fastapi/</link>
      <pubDate>Mon, 30 Sep 2024 08:20:28 +0900</pubDate>
      <guid>https://gyuha.com/post/2024/2024-09-30-using-.env-in-fastapi/</guid>
      <description>&lt;p&gt;환경별로 여러 개의 &lt;code&gt;.env&lt;/code&gt; 파일을 사용하여 설정을 관리하는 방법.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
